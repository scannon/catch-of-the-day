{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","component","name","price","onClick","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","console","log","updatedFish","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","fetch","storeId","context","store","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","details","src","alt","disabled","addToOrder","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.82c0a351.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getFunName } from '../helpers';\n\nclass StorePicker extends React.Component {\n  myInput = React.createRef();\n\n  static propTypes = {\n    history: PropTypes.object,\n  }\n\n  goToStore = event => {\n    // stop the form from submitting\n    event.preventDefault();\n    // get the text from that input\n    const storeName = this.myInput.current.value;\n    // change the page to /store/whatever-they-entered\n    this.props.history.push(`/store/${storeName}`);\n  };\n\n  render() {\n    return (\n        <form className=\"store-selector\" onSubmit={this.goToStore}>\n          <h2>Please Enter A Store</h2>\n          <input\n            type=\"text\"\n            ref={this.myInput}\n            required\n            placeholder=\"Store Name\"\n            defaultValue={getFunName()}\n          />\n          <button type=\"submit\">Visit Store →</button>\n        </form>\n    );\n  }\n}\n\nexport default StorePicker;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = (props) => (\n  <header className=\"top\">\n    <h1>\n      Catch\n      <span className=\"ofThe\">\n        <span className=\"of\">Of</span>\n        <span className=\"the\">the</span>\n      </span>\n      Day\n    </h1>\n    <h3 className=\"tagline\">\n      <span>{props.tagline}</span>\n    </h3>\n  </header>\n);\n\nHeader.propTypes = {\n  tagline: PropTypes.string.isRequired\n}\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers'\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\n\nclass Order extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    order: PropTypes.object,\n    removeFromOrder: PropTypes.func,\n  };\n  renderOrder = (key) => {\n    const fish = this.props.fishes[key];\n    const count = this.props.order[key];\n    const isAvailable = fish && fish.status === 'available';\n    const transitionOptions = {\n      classNames: \"order\",\n      key,\n      timeout: { enter: 500, exit: 500 }\n    }\n\n    // make sure the fish is loaded before we continue\n    if(!fish) return null;\n\n    if(!isAvailable) {\n      return (\n        <CSSTransition {...transitionOptions}>\n          <li key={key}>\n            Sorry {fish ? fish.name : 'fish'} is no longer available.\n          </li>\n        </CSSTransition>\n      )\n    }\n\n    return (\n      <CSSTransition {...transitionOptions}>\n        <li key={key}>\n          <span>\n            <TransitionGroup component=\"span\" className=\"count\">\n              <CSSTransition classNames=\"count\" key={count} timeout={{ enter: 500, exit: 500}}>\n                <span>{count}</span>\n              </CSSTransition>\n            </TransitionGroup>\n            lbs {fish.name}\n            {formatPrice(count * fish.price)}\n            <button onClick={() => this.props.removeFromOrder(key)}>&times;\n            </button>\n          </span>\n        </li>\n      </CSSTransition>\n    )\n  }\n\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const fish = this.props.fishes[key];\n      const count = this.props.order[key];\n      const isAvailable = fish && fish.status === 'available';\n      if(isAvailable) {\n        return prevTotal + (count * fish.price);\n      }\n      return prevTotal;\n    }, 0);\n\n    return (\n        <div className=\"order-wrap\">\n          <h2>Your Order</h2>\n          <TransitionGroup component=\"ul\" className=\"order\">\n            {orderIds.map(this.renderOrder)}\n          </TransitionGroup>\n          <div className=\"total\">\n            <strong>{formatPrice(total)}</strong>\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default Order;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddFishForm extends React.Component {\n  nameRef = React.createRef();\n  priceRef = React.createRef();\n  statusRef = React.createRef();\n  descRef = React.createRef();\n  imageRef = React.createRef();\n\n  static propTypes = {\n    addFish: PropTypes.func\n  }\n\n\n  createFish = (event) => {\n    // stop the form from submitting\n    event.preventDefault();\n    const fish = {\n      name: this.nameRef.current.value,\n      price: parseFloat(this.priceRef.current.value),\n      status: this.statusRef.current.value,\n      desc: this.descRef.current.value,\n      image: this.imageRef.current.value,\n    };\n\n    this.props.addFish(fish);\n    //refresh the form\n    event.currentTarget.reset();\n  };\n\n  render() {\n    return (\n      <>\n        <form className=\"fish-edit\" onSubmit={this.createFish}>\n          <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\n          <input\n            name=\"price\"\n            ref={this.priceRef}\n            type=\"text\"\n            placeholder=\"Price\"\n          />\n          <select name=\"status\" ref={this.statusRef}>\n            <option value=\"available\">Fresh!</option>\n            <option value=\"unavailable\">Sold Out!</option>\n          </select>\n\n          <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\n          <input\n            name=\"image\"\n            ref={this.imageRef}\n            type=\"text\"\n            placeholder=\"Image\"\n          />\n          <button type=\"submit\">+ Add Fish</button>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default AddFishForm\n","import React from \"react\";\nimport PropTypes from 'prop-types';\n\nclass EditFishForm extends React.Component {\n  static propTypes = {\n    fish: PropTypes.shape({\n        image: PropTypes.string,\n        name: PropTypes.string,\n        desc: PropTypes.string,\n        status: PropTypes.string,\n        price: PropTypes.number\n    }),\n    index: PropTypes.string,\n    updateFish: PropTypes.func,\n  }\n  handleChange = event => {\n    console.log(event.currentTarget.value);\n    // update that fish\n    // 1. Take a copy of the curernt fish\n    const updatedFish = {\n      ...this.props.fish,\n      [event.currentTarget.name]: event.currentTarget.value\n    };\n    this.props.updateFish(this.props.index, updatedFish);\n  };\n  render() {\n    return (\n      <div className=\"fish-edit\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          onChange={this.handleChange}\n          value={this.props.fish.name}\n        />\n        <input\n          type=\"text\"\n          name=\"price\"\n          onChange={this.handleChange}\n          value={this.props.fish.price}\n        />\n        <select\n          type=\"text\"\n          name=\"status\"\n          onChange={this.handleChange}\n          value={this.props.fish.status}\n        >\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea\n          name=\"desc\"\n          onChange={this.handleChange}\n          value={this.props.fish.desc}\n        />\n        <input\n          type=\"text\"\n          name=\"image\"\n          onChange={this.handleChange}\n          value={this.props.fish.image}\n        />\n        <button onClick={() => this.props.deleteFish(this.props.index)}>Remove Fish</button>\n      </div>\n    );\n  }\n}\n\nexport default EditFishForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Login = (props) => (\n  <nav className=\"login\">\n    <h2>Inventory Login</h2>\n    <p>Sign in to manage your store's inventory.</p>\n    <button\n      className=\"github\"\n      onClick={() => props.authenticate(\"Github\")}>\n        Log in with Github\n      </button>\n  </nav>\n)\n\nLogin.propTypes = {\n  authenticate: PropTypes.func.isRequired\n}\n\nexport default Login;\n","import Rebase from 're-base';\nimport firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyAGhrMN-7HRD-Nqb2rm8TWF7WCGjqEYeJY\",\n  authDomain: \"catch-of-the-day-sean-cannon.firebaseapp.com\",\n  databaseURL: \"https://catch-of-the-day-sean-cannon-default-rtdb.firebaseio.com\",\n})\n\nconst base = Rebase.createClass(firebaseApp.database());\n\n// This is a named export\nexport { firebaseApp };\n\n// this is a default export\nexport default base;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport firebase from 'firebase';\nimport AddFishForm from './AddFishForm';\nimport EditFishForm from './EditFishForm';\nimport Login from './Login';\nimport base, { firebaseApp } from '../base';\n\nclass Inventory extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    updateFish: PropTypes.func,\n    deleteFish: PropTypes.func,\n    loadSampleFishes: PropTypes.func,\n    addFish: PropTypes.func\n  }\n\n  state = {\n    uid: null,\n    owner: null\n  }\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if(user) {\n        this.authHandler({ user });\n      }\n    })\n  }\n\n  authHandler = async (authData) => {\n    // look up the current store in the firebase database\n    const store = await base.fetch(this.props.storeId, { context: this });\n    // claim it if there is no owner\n    if(!store.owner) {\n      // save it as our own\n      await base.post(`${this.props.storeId}/owner`, {\n        data: authData.user.uid\n      })\n    }\n    // set the state of the inventory component to reflect the current user\n    this.setState({\n      uid: authData.user.uid,\n      owner: store.owner || authData.user.uid\n    })\n  }\n\n  authenticate = (provider) => {\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n    firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler)\n  }\n\n  logout = async () => {\n    console.log('Logging out!');\n    await firebase.auth().signOut();\n    this.setState({ uid: null });\n  }\n\n  render() {\n    const logout = <button onClick={this.logout}>Log Out!</button>;\n\n    // check if they are logged in\n    if(!this.state.uid) {\n      return <Login authenticate={this.authenticate} />\n    }\n\n    // check if they are not the owner of the store\n    if(this.state.uid !== this.state.owner) {\n      return <div>\n        <p>Sorry, you are not the owner of this store.</p>\n        {logout}\n      </div>\n    }\n\n    // they must be the owner, just render the inventory\n    return (\n        <div className=\"inventory\">\n          <h2>Inventory</h2>\n          {logout}\n          {Object.keys(this.props.fishes).map(key => (\n            <EditFishForm\n              key={key}\n              index={key}\n              fish={this.props.fishes[key]}\n              updateFish={this.props.updateFish}\n              deleteFish={this.props.deleteFish}\n            />\n          ))}\n          <AddFishForm addFish={this.props.addFish} />\n          <button onClick={this.props.loadSampleFishes}>Load Sample Fishes</button>\n        </div>\n    );\n  }\n}\n\nexport default Inventory;\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\n\nclass Fish extends React.Component {\n  static propTypes = {\n    details: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number\n    }),\n    addToOrder: PropTypes.func,\n  }\n  render() {\n    const { image, name, price, desc, status } = this.props.details\n    const isAvailable = status === 'available';\n    return (\n        <li className=\"menu-fish\">\n          <img src={image} alt={name} />\n          <h3 className=\"fish-name\">\n            {name}\n            <span className=\"price\">{formatPrice(price)}</span>\n          </h3>\n          <p>{desc}</p>\n          <button disabled={!isAvailable}\n          onClick={() => this.props.addToOrder(this.props.index)}>\n            {isAvailable ? 'Add to Cart' : 'Sold Out'}\n            </button>\n        </li>\n    );\n  }\n}\n\n\nexport default Fish\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from './Header';\nimport Order from './Order';\nimport Inventory from './Inventory';\nimport sampleFishes from '../sample-fishes';\nimport Fish from './Fish';\nimport base from '../base';\n\nclass App extends React.Component {\n  state = {\n    fishes: {},\n    order: {}\n  };\n\n  static propTypes = {\n    match: PropTypes.object\n  }\n  componentDidMount() {\n    const { params } = this.props.match;\n    // first reinstate localstorage\n    const localStorageRef = localStorage.getItem(params.storeId);\n    if(localStorageRef) {\n      this.setState({order: JSON.parse(localStorageRef)})\n    }\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\n      context: this,\n      state: \"fishes\"\n    });\n  }\n  componentDidUpdate() {\n    localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order));\n  }\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n\n  addFish = (fish) => {\n    // take a copy of the existing state\n    const fishes = {...this.state.fishes};\n    // add our new fish to that fishes variable\n    fishes[`fish${Date.now()}`] = fish;\n    // set the new fishes object to state\n    this.setState({ fishes });\n  };\n\n  updateFish = (key, updatedFish) => {\n    // 1. Take a copy of the current state\n    const fishes = { ...this.state.fishes };\n    // 2. Update that state\n    fishes[key] = updatedFish;\n    // 3. Set that to state\n    this.setState({ fishes });\n  };\n\n  deleteFish = (key) => {\n    // take a copy of state\n    const fishes = {...this.state.fishes};\n    // update the state\n    fishes[key] = null\n    // update state\n    this.setState({fishes});\n  }\n\n  loadSampleFishes = () => {\n    this.setState({ fishes: sampleFishes })\n  };\n\n  addToOrder = key => {\n    // take a copy of state\n    const order = { ...this.state.order };\n    // either add to order or update the number in order\n    order[key] = order[key] + 1 || 1;\n    // call setstate to update state object\n    this.setState({ order })\n  }\n\n  removeFromOrder = key => {\n    // take a copy of state\n    const order = { ...this.state.order };\n    // remove that item from our order\n    delete order[key]\n    // call setstate to update state object\n    this.setState({ order })\n\n  }\n\n  render() {\n    return (\n      <div className=\"catch-of-the-day\">\n        <div className=\"menu\">\n          <Header tagline=\"Fresh Seafood Market\" />\n          <ul className=\"fishes\">\n            {Object.keys(this.state.fishes).map(key => (\n              <Fish\n                key={key}\n                index={key}\n                details={this.state.fishes[key]}\n                addToOrder={this.addToOrder}\n              />\n            ))}\n          </ul>\n        </div>\n        <Order fishes={this.state.fishes} order={this.state.order} removeFromOrder={this.removeFromOrder} />\n        <Inventory\n          addFish={this.addFish}\n          updateFish={this.updateFish}\n          deleteFish={this.deleteFish}\n          loadSampleFishes={this.loadSampleFishes}\n          fishes={this.state.fishes}\n          storeId={this.props.match.params.storeId}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\n\nconst NotFound = () => (\n  <div>\n    <h2>Not Found!</h2>\n  </div>\n);\n\nexport default NotFound\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport StorePicker from \"./StorePicker\"\nimport App from \"./App\"\nimport NotFound from \"./NotFound\"\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={StorePicker} />\n      <Route exact path=\"/store/:storeId\" component={App} />\n      <Route component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Router;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport Router from './components/Router';\nimport './css/style.css';\n\nrender(<Router />, document.querySelector('#main'));\n"],"sourceRoot":""}